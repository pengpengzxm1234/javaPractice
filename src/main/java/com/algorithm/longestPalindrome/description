最长回文子串算法

回文串定义：如果一个字符串正读和反读是一样的，那它就是回文串。
如：“abdba”

解决办法：
1、暴力法，遍历所有字符，找到最长的回文子串。
    思路：三层循环：一层循环，从头遍历字符（i）；
                 第二层循环，从第一层循环的下一位开始循环（j = i+1）；
                 三层循环，根据当前一层和二层的i和j的位置，（相向循环）对比字符数组的值，若不相等，跳出循环，若是相等跳出循环，计算长度。

2、动态规划
对于字符串str，假设dp[i,j]=1表示str[i...j]是回文子串，那个必定存在dp[i+1,j-1]=1。这样最长回文子串就能分解成一系列子问题，可以利用动态规划求解了。
 当str[i]=str[j]时，如果str[i+1...j-1]是回文串，则str[i...j]也是回文串；如果str[i+1...j-1]不是回文串，则str[i...j]不是回文串。

 3、Manacher算法
 这是一个专门用作处理最长回文子串的方法，思想很巧妙，比较难以理解，这里直接借用了别人的讲解方法。其实主要思想是，把给定的字符串的每一个字母当做中心
 ，向两边扩展，这样来找最长的子回文串，这个叫中心扩展法，但是这个方法还要考虑到处理abba这种偶数个字符的回文串。Manacher法将所有的字符串全部变成奇数个字符。